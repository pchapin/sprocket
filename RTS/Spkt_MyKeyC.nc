// Generated by Sprocket. This file is overwritten each time Sprocket is run. Do not edit!

module Spkt_MyKeyC {
    provides interface MyKey;
}
implementation {
    
    // This is a bit hacked. Really get_private_key should return struct PrivateKey defined in
    // CryptographicServices.h. It's being done this way here because TinyECC ususally just
    // treats private keys as NN_DIGIT pointers and I don't want to chase down all the places
    // where TinyECC is called to convert struct PrivateKey to NN_DIGIT *.
    //
    struct PrivateMaterial {
        NN_DIGIT data[11];   // Eleven words is 22 bytes on the MSP430.
    };
    
    // Key information stored in little endian form in 16 bit units.
    
    %PUBLICKEYS%
	
    %PRIVATEKEYS%

    
    command const struct PublicKey *MyKey.get_public_key( int key_index )
    {
        return &myPublicKeys[key_index];
    }
  
    
    command const NN_DIGIT *MyKey.get_private_key( int key_index )
    {
        return myPrivateKeys[key_index].data;
    }
    
    
    command int MyKey.get_key_count( )
    {
        return %KEYCOUNT%;
    }
    
}
