Check HarvesterConfig.h to adjust from which nodes the Harvester will gather data.

Harvester (node 0)
   Upon start-up the green light will be blinking.

     User Button SHORT (announce existence to network)
       green light on SensorBox; red light on Harvester... User Button LONG to get data. there
       will be a delay and then blue lights flash while data transferred. There is another delay
       before the Harvester is ready for more (green light will start flashing again).

     User Button LONG (shutdown)
       User Button LONG again to restore SensorBox to "normal" operation. The Harvester has a
       blue light on while it is working on this. There is a delay before the SensorBox goes
       back to normal and a delay before the Harvester goes back to normal.

SensorBox (node 1)
   Upon start-up the red light will be on.

     User Button LONG (clear memory)
       red+green light... User Button LONG again... wait for blue light

     User Button SHORT (sampling mode)
       green light... User Button SHORT... light off (10 second start up)... red light on while
       sampling... all lights off when sampling done and ready for Harvester.

=====

The two roles of interest are the N.control and N.collect roles. There are a total of three
entities are N (the nodes), Hd (the Harvester that can collect data), and Hc (the "Harvester"
that can issue commands).

The nodes need to propagate information forward so they need access to both roles. Thus the
overall policy is

1. N.control <- N
2. N.control <- Hc
3. N.collect <- N
4. N.collect <- Hc (here I'm allowing a controller to also collect).
5. N.collect <- Hd

In principal the nodes should be deployed with credential #1 and #3. Each kind of harvester
should be deployed with it's corresponding credentials (#2 and #4 for an Hc harvester, and #5
for an Hd harvester). Actually the current implementation has every node transmitting all
credentials (a little unnecessary).
